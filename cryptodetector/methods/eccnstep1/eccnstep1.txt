# Copyright (c) 2017 Wind River Systems, Inc.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at:

#     http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software  distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.

#
# List of keywords
#
# \b is a special symbol that matches beginning or end of a token (word)
#
# Use \bword\b to search for whole-words
#
# "language" can be one of:
# 	"all" \(any text file),
# 	"source" \(any source code file),
# 	"c" \(C or C++),
# 	"python",
# 	"java",
# 	"shell",
# 	"perl",
# 	"javascript",
# 	"scala",
# 	"haskell",
# 	"pascal"

[keyword_list_version]
	1

[{"evidence_type": "Your product contain, use, employ or call cryptography operations.", "language": "all"}]
	"0x02aab17cf7e90c5e"
	"0x0F1946B8"
	"0x16c6d2d4"
	"0x1823c6e887b8014f"
	"0x1B, 0x32, 0x33, 0x5A"
	"0x30fb40d4"
	"0x3c6ef373"
	"0x428a2f98"
	"0x5A827999"
	"0x67452301"
	"0x7EC90C04"
	"0x8979FB1B"
	"0xA09E667F"
	"0xA9, 0x67, 0xB3, 0xE8"
	"0xBCBC3275"
	"0xD1310BA6"
	"0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1"
	"0xb7e15163"
	"0xd76aa478"
	"0xe8c7b756"
	"1.2.643.2.2.30."
	"1.2.643.2.2.31."
	"1.2.840.10045.3.1.1"
	"50A28BE6"
	"58, 50, 42, 34, 26, 18, 10"
	"8000000000008089"
	"99, 124, 119, 123, 242, 107, 111, 197"
	"AES128"
	"AES256"
	"Advanced Encryption Standard"
	"Block Cipher"
	"BlockCipherFinal"
	"Camellia"
	"CkCrypt2"
	"DES algorithm"
	"DES-EDE"
	"DES-XEX"
	"DES3-KD"
	"DHParameterSpec"
	"DHPrivKey"
	"DHPrivateKey"
	"DHPubKey"
	"DHPublicKey"
	"DH_compute_key"
	"DH_generate_key"
	"Data Encryption Standard"
	"Diffie Hellman"
	"Diffie-Hellman"
	"Diffie.Hellman"
	"DiffieHellman"
	"Diffie_Hellman"
	"Digital Signature Algorithm"
	"ECDH"
	"ECDSA"
	"ECMQV"
	"El Gamal"
	"El-Gamal"
	"El.Gamal"
	"ElGamal"
	"El_Gamal"
	"Elliptic Curve"
	"Elliptic-Curve"
	"Elliptic.Curve"
	"EllipticCurve"
	"Elliptic_Curve"
	"HMAC_CTX"
	"HMAC_MD4"
	"HMAC_MD5"
	"HMAC_SHA"
	"HMAX_MD5_Context"
	"Luby Rackoff"
	"Luby-Rackoff"
	"LubyRackoff"
	"MERSENNE"
	"PrivateKey"
	"Private_Key"
	"ProcessAndXorBlock"
	"PublicKey"
	"Public_Key"
	"RC2 algorithm"
	"RC2_decrypt"
	"RC2_encrypt"
	"RC2_set_key"
	"RC4 algorithm"
	"RC4_decrypt"
	"RC4_encrypt"
	"RC5 algorithm"
	"RC5_decrypt"
	"RC5_encrypt"
	"RC6 algorithm"
	"RC6_decrypt"
	"RC6_encrypt"
	"RIPEMD128"
	"RIPEMD160"
	"RIPEMD256"
	"RIPEMD320"
	"RSAKey"
	"RSAPrivKey"
	"RSAPrivateKey"
	"RSAPubKey"
	"RSAPublicKey"
	"RSASignature"
	"SSL/TLS"
	"SSLSocket"
	"Salsa-20"
	"Salsa20"
	"Salsa_20"
	"Stream Cipher"
	"TLSv1"
	"ThreeFish"
	"Transport Layer Security"
	"\b3DES"
	"\bAES_"
	"\bAdler-32"
	"\bAdler32"
	"\bArcfour"
	"\bBLAKE 256"
	"\bBLAKE-256"
	"\bBLAKE256"
	"\bBLAKE2b"
	"\bBLAKE_256"
	"\bBMGL"
	"\bBOTAN_"
	"\bBeeCrypt"
	"\bBlockCipher"
	"\bCAST-128"
	"\bCAST-256"
	"\bCAST128"
	"\bCAST256"
	"\bCAST5"
	"\bCAST6"
	"\bCAST_128"
	"\bCAST_256"
	"\bCMAC\b"
	"\bCMAC_"
	"\bCRYPTOPP"
	"\bCS Cipher"
	"\bCS-Cipher"
	"\bCSCipher"
	"\bCS_Cipher"
	"\bChaCha20"
	"\bCkDh\b"
	"\bDESX"
	"\bDES_"
	"\bDES_key"
	"\bDFCv2"
	"\bDSAPrivateKey"
	"\bDSAPublicKey"
	"\bDSA_"
	"\bDSA_new"
	"\bEC2NP"
	"\bECIES"
	"\bECNR"
	"\bELG_public_key"
	"\bELG_secret_key"
	"\bGCRY_"
	"\bGOST 28147"
	"\bGOST-28147"
	"\bGOST28147"
	"\bGOST_28147"
	"\bGPG\b"
	"\bGPG_"
	"\bGnuPG\b"
	"\bHKDF"
	"\bHMAC"
	"\bKASUMI"
	"\bKRB5_"
	"\bLibgcrypt"
	"\bMD2\b"
	"\bMD2_"
	"\bMD4\b"
	"\bMD4_"
	"\bMD5\b"
	"\bMD5_"
	"\bMDC2\b"
	"\bMISTY1"
	"\bMQV\b"
	"\bMQV_Domain"
	"\bMS-CHAP"
	"\bMSCHAP"
	"\bOAEP"
	"\bOpenSSH"
	"\bOpenSSL"
	"\bPGP\b"
	"\bPGP_"
	"\bRC2Context"
	"\bRC2_128"
	"\bRC2_BLOCK_SIZE"
	"\bRC2_KEY"
	"\bRC4Context"
	"\bRC4_128"
	"\bRC4_HMAC"
	"\bRC4_KEY"
	"\bRC5Context"
	"\bRC5_KEY"
	"\bRC6_KEY"
	"\bRIPEMD"
	"\bROT13\b"
	"\bROT13_"
	"\bRSA_"
	"\bRawDES"
	"\bSAFER-K\b"
	"\bSAFER-SK\b"
	"\bSAFERK"
	"\bSAFERSK\b"
	"\bSAFERSK_"
	"\bSAFER_K\b"
	"\bSAFER_SK\b"
	"\bSHA-1"
	"\bSHA-2"
	"\bSHA-224"
	"\bSHA-256"
	"\bSHA-3"
	"\bSHA-384"
	"\bSHA-512"
	"\bSHA1"
	"\bSHA2"
	"\bSHA224"
	"\bSHA256"
	"\bSHA3"
	"\bSHA384"
	"\bSHA512"
	"\bSHACAL"
	"\bSHA_224"
	"\bSHA_256"
	"\bSHA_384"
	"\bSHA_512"
	"\bSHA_End"
	"\bSHA_Init"
	"\bSHA_Update"
	"\bSSL_"
	"\bSecurID\b"
	"\bSerpent\b"
	"\bSosemanuk"
	"\bStreamCipher"
	"\bTTMAC\b"
	"\bVMAC"
	"\bX509_digest"
	"\bX9-31"
	"\bX9.31"
	"\bX931"
	"\bX9_31"
	"\bXSalsa20"
	"\bXTEA"
	"\baesKey\b"
	"\baes\b"
	"\barcfour_"
	"\basn1_err"
	"\bbear lion"
	"\bbear-lion"
	"\bbear_lion"
	"\bbearlion"
	"\bbotan\b"
	"\bcerts"
	"\bcipher"
	"\bcryptCreate"
	"\bcryptDecrypt"
	"\bcryptEncrypt"
	"\bcryptlib"
	"\bdgstsum\b"
	"\bdsa\b"
	"\becc_make_key"
	"\belg_decrypt"
	"\belg_encrypt"
	"\belg_generate"
	"\belg_sign"
	"\belg_verify"
	"\bfeistel"
	"\bgenerateWorkingKey"
	"\bgnutls"
	"\bhexdigest"
	"\bideaDecrypt"
	"\bideaEncrypt"
	"\bidea_decrypt"
	"\bidea_encrypt"
	"\bideainit"
	"\bkeccak"
	"\bkey_schedule"
	"\bkeysym"
	"\bkrb5\b"
	"\blhash"
	"\blibssh"
	"\blibssl"
	"\bmd2sum\b"
	"\bmd4sum\b"
	"\bmd5sum\b"
	"\bmdString"
	"\bmdc2sum\b"
	"\bnoekeon"
	"\bocsp_asn1.h\b"
	"\bossl_"
	"\bpkcs12.h\b"
	"\bpkcs12_asn1.h\b"
	"\bpkcs8_asn1.h\b"
	"\bpkcs9_asn1.h\b"
	"\bpkinit_asn1.h\b"
	"\bpub_key"
	"\bpubkey"
	"\brc2-cbc"
	"\brc2-cfb"
	"\brc2-ecb"
	"\brc2-ofb"
	"\brc2_cbc"
	"\brc2_cfb"
	"\brc2_ecb"
	"\brc2_ofb"
	"\brc4-cbc"
	"\brc4-cfb"
	"\brc4-ecb"
	"\brc4-ofb"
	"\brc4_cbc"
	"\brc4_cfb"
	"\brc4_ecb"
	"\brc4_ofb"
	"\brc5-cbc"
	"\brc5-cfb"
	"\brc5-ecb"
	"\brc5-ofb"
	"\brc5_cbc"
	"\brc5_cfb"
	"\brc5_ecb"
	"\brc5_ofb"
	"\brc6-cbc"
	"\brc6-cfb"
	"\brc6-ecb"
	"\brc6-ofb"
	"\brc6_cbc"
	"\brc6_cfb"
	"\brc6_ecb"
	"\brc6_ofb"
	"\brhash"
	"\brijndael"
	"\bripemd160sum\b"
	"\brsa\b"
	"\bseed_decrypt"
	"\bseed_encrypt"
	"\bseed_setkey"
	"\bserpent_"
	"\bsha1sum\b"
	"\bshasum\b"
	"\bssh2"
	"\bssh\b"
	"\bssh_"
	"\bssl.h\b"
	"\bssl\b"
	"\btiger_context"
	"\btiger_final"
	"\btiger_init"
	"\btls_cipher"
	"\btls_client"
	"\btls_server"
	"\bwhirlpool"
	"\bx-509"
	"\bx.509"
	"\bx509"
	"_3DES"
	"_AES\b"
	"_AES_"
	"_DES\b"
	"_DES_"
	"_DSA\b"
	"_DSA_"
	"_EC2NP\b"
	"_EC2NP_"
	"_GPG\b"
	"_GPG_"
	"_MD2\b"
	"_MD2_"
	"_MD4\b"
	"_MD4_"
	"_MD5\b"
	"_MD5_"
	"_MQV_"
	"_OpenSSL"
	"_PGP\b"
	"_PGP_"
	"_RSA\b"
	"_RSA_"
	"_SHA-1"
	"_SHA-2"
	"_SHA-224"
	"_SHA-256"
	"_SHA-384"
	"_SHA-512"
	"_SHA1"
	"_SHA2"
	"_SHA224"
	"_SHA256"
	"_SHA384"
	"_SHA512"
	"_SHA_224"
	"_SHA_256"
	"_SHA_384"
	"_SHA_512"
	"_SSL\b"
	"_SSL_"
	"_X509\b"
	"_X509_"
	"_cipher"
	"_keccak"
	"_pubkey"
	"_rc4-cbc"
	"_rc4-cfb"
	"_rc4-ecb"
	"_rc4-ofb"
	"_rc4_cbc"
	"_rc4_cfb"
	"_rc4_ecb"
	"_rc4_ofb"
	"_serpent"
	"_ssh\b"
	"_ssh_"
	"base64Cipher"
	"blowfish"
	"bouncycastle"
	"cascade_cipher"
	"crypt"
	"glibc/crypt"
	"kerberos"
	"krypt"
	"libpgp"
	"mbedtls"
	"pkcs"
	"priv_key"
	"secp192r1"
	"secp256r1"
	"secp521r1"
	"secretKey"
	"secret_key"
	"spongycastle"
	"triple_des"
	"tripledes"
	"twofish"
